app:
  title: Ortelius
  baseUrl: https://backstage.ortelius.io

organization:
  name: Ortelius

auth:
  environment: production
  providers:
    github:
      development:
        clientId: ${GITHUB_OAUTH_CLIENT_ID}
        clientSecret: ${GITHUB_OAUTH_CLIENT_SECRET}
    integrations:
      github:
        - host: github.com
          apps:
            - $include: github-app-credentials.yaml

backend:
  baseUrl: https://backstage-backend.ortelius.io
  listen:
    port: 7007
    host: 0.0.0.0
  csp:
    connect-src: ["'self'", 'http:', 'https:']
  cors:
    origin: https://backstage.ortelius.io
    methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
    credentials: true

  database:
    client: pg
    connection:
      host: ${POSTGRES_HOST}
      port: ${POSTGRES_PORT}
      user: ${POSTGRES_USER}
      password: ${POSTGRES_PASSWORD}
    knexConfig:
      pool:
        min: 15
        max: 30
        acquireTimeoutMillis: 60000
        createTimeoutMillis: 30000
        destroyTimeoutMillis: 5000
        idleTimeoutMillis: 60000
        reapIntervalMillis: 1000
        createRetryIntervalMillis: 200
        propagateCreateError: false
  cache:
    store: memory

integrations:
  github:
    - host: github.com
      # This is a Personal Access Token or PAT from GitHub. You can find out how to generate this token, and more information
      # about setting up the GitHub integration here: https://backstage.io/docs/getting-started/configuration#setting-up-a-github-integration
      token: ${GITHUB_TOKEN}

kubernetes:
  serviceLocatorMethod:
    type: 'multiTenant'
  clusterLocatorMethods:
    - type: 'config'
      clusters:
        - url: ${KUBERNETES_URL}
          name: AKS
          serviceAccountToken: ${KUBERNETES_TOKEN}
          authProvider: 'serviceAccount'
          skipTLSVerify: true
          skipMetricsLookup: true
argocd:
  username: ${ARGOCD_USERNAME}
  password: ${ARGOCD_PASSWORD}
  appLocatorMethods:
    - type: 'config'
      instances:
        - name: production
          url: ${ARGOCD_BASE_URL}

techdocs:
  builder: 'local' # Alternatives - 'external'
  generator:
    runIn: 'docker' # Alternatives - 'local'
  publisher:
    type: 'local' # Alternatives - 'googleGcs' or 'awsS3'. Read documentation for using alternatives.

scaffolder:
  # see https://backstage.io/docs/features/software-templates/configuration for software template options

catalog:
  import:
    entityFilename: catalog-info.yaml
    pullRequestBranchName: backstage-integration
  rules:
    - allow: [Component, System, API, Resource, Location]
  locations:
    - type: url
      target: https://github.com/ortelius/ortelius-kubernetes/blob/main/catalog-info.yaml
      rules:
        - allow: [Component, System, API, Resource, Location, Domain, Location, Group]
    - type: url
      target: https://github.com/ortelius/backstage/blob/main/catalog-info.yaml
      rules:
        - allow: [Component, System, API, Resource, Location, Domain, Location]
    - type: github-org
      target: https://github.com/ortelius
      rules:
        - allow: [Group, User]
