name: CI Backend

on:
  push:
    branches:
      - main
    paths:
      - 'packages/backend/**'
      - 'Dockerfile.app'
      - 'yarn.lock'
      - 'package.json'

permissions:
  id-token: write
  contents: write
  packages: write
  security-events: write
  actions: read

jobs:

  build:
    runs-on: ubuntu-latest

    env:
      COSIGN_EXPERIMENTAL: 1
      IMAGE_NAME_BACKEND: ghcr.io/ortelius/backstage/backend:0.0.2

    outputs:
      image-digest-backend: ${{ steps.container_info.outputs.image-digest-backend }}

    steps:
    - uses: actions/checkout@v3

    - name: Setup Nodejs and npm
      uses: actions/setup-node@v2
      with:
        node-version: "16"

    - name: Setup yarn
      run: npm install -g yarn

    - name: Setup Nodejs with yarn caching
      uses: actions/setup-node@v2
      with:
        node-version: "16"
        cache: yarn

    - run: yarn install --immutable --immutable-cache --check-cache
    - run: yarn tsc
    - run: yarn lint:all
    - run: yarn test:all
    - run: yarn build

    - name: Upload backend artifact
      uses: actions/upload-artifact@v2
      with:
        name: backend
        path: packages/backend/dist
        retention-days: 5
        if-no-files-found: error

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to GitHub Container registry
      uses: docker/login-action@v1
      env:
        GITHUB_USER: ${{ github.actor }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ env.GITHUB_TOKEN }}

    - name: Build & Push Docker Image Backend
      run: |
        revision="$(git rev-parse "${GITHUB_REF_NAME:-HEAD}")"
        DOCKER_BUILDKIT=1 docker build \
         -t "${IMAGE_NAME_BACKEND}" -f ./Dockerfile.backend \
         --label "org.opencontainers.image.source=https://github.com/ortelius/backstage/packages/backend" \
         --label "org.opencontainers.image.created=$(date --iso-8601=seconds)" \
         --label "org.opencontainers.image.title=Ortelius Backstage Backend" \
         --label "org.opencontainers.image.revision=${revision}" \
         --label "org.opencontainers.image.version=${GITHUB_REF_NAME}" \
         --label "org.opencontainers.image.vendor=ortelius" \
          .

    - name: Run Trivy vulnerability scanner backend
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'ghcr.io/ortelius/backstage/backend:0.0.2'
        format: 'template'
        template: '@/contrib/sarif.tpl'
        output: '${{matrix.arch}}-container-trivy-results-backend.sarif'
        exit-code: '0'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL'

    - name: Docker Push Backend
      run: |-
        docker push --all-tags ghcr.io/ortelius/backstage/backend

    - name: Get container info Backend
      id: container_info_backend
      run: |
        image_digest="$(docker inspect "${IMAGE_NAME}" --format '{{ index .RepoDigests 0 }}' | awk -F '@' '{ print $2 }')"
        echo "::set-output name=image-digest-backend::${image_digest}"
