name: CI

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: write
  packages: write

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Setup Nodejs and npm
      uses: actions/setup-node@v2
      with:
        node-version: "16"

    - name: Setup yarn
      run: npm install -g yarn

    - name: Setup Nodejs with yarn caching
      uses: actions/setup-node@v2
      with:
        node-version: "16"
        cache: yarn

    - run: yarn install --immutable --immutable-cache --check-cache
    - run: yarn tsc
    - run: yarn lint:all
    - run: yarn test:all
    - run: yarn build

    - name: Upload app artifact
      uses: actions/upload-artifact@v2
      with:
        name: app
        path: packages/app/dist
        retention-days: 5
        if-no-files-found: error

    - name: Upload backend artifact
      uses: actions/upload-artifact@v2
      with:
        name: backend
        path: packages/backend/dist
        retention-days: 5
        if-no-files-found: error

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to GitHub Container registry
      uses: docker/login-action@v1
      env:
        GITHUB_USER: ${{ github.actor }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ env.GITHUB_TOKEN }}

    - name: Build Docker Image
      run: |
        DOCKER_BUILDKIT=1 docker build -t ghcr.io/ortelius/backstage/app:0.0.1 -f ./Dockerfile.app .
        DOCKER_BUILDKIT=1 docker build -t ghcr.io/ortelius/backstage/backend:0.0.1 -f ./Dockerfile.backend .

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'ghcr.io/ortelius/backstage/app:0.0.1'
        format: 'table'
        exit-code: '0'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL'

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'ghcr.io/ortelius/backstage/backend:0.0.1'
        format: 'table'
        exit-code: '0'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL'

    - name: Docker Push
      run: |-
        docker push ghcr.io/ortelius/backstage/app:0.0.1
        docker push ghcr.io/ortelius/backstage/backend:0.0.1

    - name: Set up Docker metadata
      id: metadata
      uses: docker/metadata-action@v3
      with:
        images: ghcr.io/ortelius/backstage/app
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}

    # - name: Docker build
    #   id: docker_build
    #   uses: docker/build-push-action@v2
    #   with:
    #     context: .
    #     file: ./packages/app/Dockerfile
    #     platforms: linux/amd64
    #     push: ${{ github.event_name != 'pull_request' }}
    #     tags: ${{ steps.metadata.outputs.tags }}
    #     labels: ${{ steps.metadata.outputs.labels }}

    # - name: Image digest
    #   run: echo ${{ steps.docker_build.outputs.digest }}

    # - name: docker login
    #   env:
    #     DOCKER_USER: ${{secrets.DOCKER_USER}}
    #     DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
    #   run: |
    #     docker login -u $DOCKER_USER -p $DOCKER_PASSWORD

    # - name: Build the Docker image
    #   run: |-
    #     docker build . --file Dockerfile --tag ortelius/backstage:0.0.1
